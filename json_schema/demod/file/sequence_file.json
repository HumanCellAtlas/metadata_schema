{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "http://schema.dev.data.humancellatlas.org/type/file/7.0.2/sequence_file",
    "description": "A file of read sequences generated by a sequencing experiment.",
    "additionalProperties": false,
    "required": [
        "describedBy",
        "schema_type",
        "file_core",
        "read_index"
    ],
    "title": "Sequence file",
    "name": "sequence_file",
    "type": "object",
    "properties": {
        "describedBy": {
            "description": "The URL reference to the schema.",
            "type": "string",
            "pattern": "^(http|https)://schema.(.*?)humancellatlas.org/type/file/(([0-9]{1,}.[0-9]{1,}.[0-9]{1,})|([a-zA-Z]*?))/sequence_file"
        },
        "schema_version": {
            "description": "The version number of the schema in major.minor.patch format.",
            "type": "string",
            "pattern": "^[0-9]{1,}.[0-9]{1,}.[0-9]{1,}$",
            "example": "4.6.1"
        },
        "schema_type": {
            "description": "The type of the metadata schema entity.",
            "type": "string",
            "enum": [
                "file"
            ]
        },
        "provenance": {
            "description": "Provenance information added or generated at time of ingest.",
            "required": [
                "document_id",
                "submission_date"
            ],
            "title": "Provenance",
            "name": "provenance",
            "type": "object",
            "properties": {
                "submission_date": {
                    "description": "When project was first submitted to database.",
                    "type": "string",
                    "format": "date-time"
                },
                "submitter_id": {
                    "description": "ID of individual who first submitted project.",
                    "type": "string"
                },
                "update_date": {
                    "description": "When project was last updated.",
                    "type": "string",
                    "format": "date-time"
                },
                "updater_id": {
                    "description": "ID of individual who last updated project.",
                    "type": "string"
                },
                "document_id": {
                    "description": "Identifier for document.",
                    "type": "string",
                    "pattern": ".{8}-.{4}-.{4}-.{4}-.{12}",
                    "comment": "This structure supports the current ingest API. It may change in the future."
                },
                "accession": {
                    "description": "A unique accession for this entity, provided by the broker.",
                    "type": "string"
                }
            }
        },
        "file_core": {
            "description": "Information about a file produced from any process.",
            "required": [
                "file_name",
                "file_format"
            ],
            "title": "File core",
            "name": "file_core",
            "type": "object",
            "properties": {
                "file_name": {
                    "description": "The name of the file.",
                    "type": "string",
                    "user_friendly": "File name",
                    "guidelines": "Include the file extension in the file name.",
                    "example": "R1.fastq.gz; codebook.json"
                },
                "file_format": {
                    "description": "The format of the file.",
                    "type": "string",
                    "user_friendly": "File format",
                    "guidelines": "Indicate the full file extension including compression extensions.",
                    "example": "fastq.gz; tif"
                },
                "checksum": {
                    "description": "MD5 checksum of the file.",
                    "type": "string",
                    "user_friendly": "Checksum",
                    "example": "e09a986c2e630130b1849d4bf9a94c06"
                }
            }
        },
        "read_index": {
            "description": "The sequencing read this file represents.",
            "type": "string",
            "example": "Should be one of: read1, read2, index1, index2",
            "enum": [
                "read1",
                "read2",
                "index1",
                "index2",
                "single-end, non-indexed"
            ],
            "user_friendly": "Read index",
            "guidelines": "If a sequencing experiment is single-end, enter 'read1'."
        },
        "lane_index": {
            "description": "The lane that this file was sequenced from.",
            "type": "integer",
            "example": 1,
            "user_friendly": "Lane index"
        },
        "read_length": {
            "description": "The length of a sequenced read in this file, in nucleotides.",
            "type": "integer",
            "example": 51,
            "user_friendly": "Read length"
        },
        "insdc_run": {
            "description": "An INSDC (International Nucleotide Sequence Database Collaboration) run accession from the DDBJ, NCBI, or EMBL-EBI.",
            "type": "array",
            "items": {
                "pattern": "^[D|E|S]RR[0-9]+$",
                "type": "string"
            },
            "user_friendly": "INSDC run accession",
            "example": "SRR0000000",
            "guidelines": "Accession must start with DRR, SRR, or ERR."
        },
        "library_prep_id": {
            "description": "A unique ID for the library preparation.",
            "type": "string",
            "example": "tech_rep_group_001",
            "user_friendly": "Library preparation ID",
            "guidelines": "Indicate which samples are from the same library preparation by providing a unique identifier for each library preparation."
        }
    }
}